% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mp_tmb_model_spec.R
\name{mp_tmb_model_spec}
\alias{mp_tmb_model_spec}
\alias{summary.TMBModelSpec}
\title{Create TMB Model Specification}
\usage{
mp_tmb_model_spec(
  before = list(),
  during = list(),
  after = list(),
  default = list(),
  integers = list(),
  must_save = character(),
  must_not_save = character(),
  sim_exprs = character(),
  state_update = c("euler", "rk4", "euler_multinomial", "hazard", "rk4_old")
)

\method{summary}{TMBModelSpec}(object, ...)
}
\arguments{
\item{before}{List of expressions to be evaluated (in the order provided)
before the simulation loop begins. Expressions can either be standard
R \code{\link{formula}} objects or calls to flow functions (e.g.,
\code{\link{mp_per_capita_flow}}). Formulas must have a left hand
side that gives the name of the matrix being updated, and a right hand side
giving an expression containing only (1) the names of quantities in the
model, (2) functions defined in the TMB engine, and (3) numerical literals
(e.g., \code{3.14}). The available functions in the TMB engine  can be
described in \code{\link{engine_functions}}. Names can be provided for the
components of \code{before}, and these names do not have to be unique. These
names are used by the \code{sim_exprs} argument.}

\item{during}{List of formulas or calls to flow functions (e.g.,
\code{\link{mp_per_capita_flow}}) to be evaluated at every iteration of the
simulation loop, with the same rules as \code{before}.}

\item{after}{List of formulas or calls to flow functions (e.g.,
\code{\link{mp_per_capita_flow}}) to be evaluated after the simulation loop,
with the same rules as \code{before}.}

\item{default}{Named list of objects, each of which can be coerced into
a \code{\link{numeric}} \code{\link{matrix}}. The names refer to
variables that appear in \code{before}, \code{during}, and \code{after}.}

\item{integers}{Named list of vectors that can be coerced to integer
vectors. These integer vectors can be used by name in model formulas to
provide indexing of matrices and as grouping factors in
\code{\link{group_sums}}.}

\item{must_save}{Character vector of the names of matrices that must have
their values stored at every iteration of the simulation loop. For example,
a matrix that the user does not want to be returned but that impacts dynamics
with a time lag must be saved and therefore in this list.}

\item{must_not_save}{Character vector of the names of matrices that must
not have their values stored at every iteration of the simulation loop. For
example, the user may ask to return a very large matrix that would create
performance issues if stored at each iteration. The creator of the model
can mark such matrices making it impossible for the user of the model to
save their full simulation history.}

\item{sim_exprs}{Character vector of the names of \code{before},
\code{during}, and \code{after} expressions that must only be evaluated
when simulations are being produced and not when the objective function is
being evaluated. For example, expressions that generate stochasticity should
be listed in \code{sim_exprs} because TMB objective functions must be
continuous.}

\item{state_update}{(experimental) Optional character vector for how to
update the state variables when it is relevant. Options include \code{"euler"},
\code{"rk4"}, and \code{"euler_multinomial"}.}
}
\description{
Specify a simulation model in the TMB engine. A detailed explanation of this
function is covered in \code{vignette("quickstart")}.
}
\section{Functions}{
\itemize{
\item \code{summary(TMBModelSpec)}: Summarize aspects (TODO: what aspects) of
a model specification.

}}
\examples{
## A simple SI model.
spec = mp_tmb_model_spec(
    during = mp_per_capita_flow("S", "I", "beta * I / N", "infection")
  , default = list(N = 100, S = 99, I = 1, beta = 0.2)
)
(spec 
  |> mp_simulator(time_steps = 5L, output = "infection") 
  |> mp_trajectory()
)

## The `~` can be used for flexibly defining dynamical variables.
spec2 = mp_tmb_model_spec(
    during = list(
          force_of_infection ~ beta * I / N
        , mp_per_capita_flow("S", "I", "force_of_infection", "infection")
    )
  , default = list(N = 100, S = 99, I = 1, beta = 0.2)
)
(spec2
  |> mp_simulator(time_steps = 5L, output = "force_of_infection") 
  |> mp_trajectory()
)

## The `before` argument can be used to pre-compute quantities before
## the simulation loop begins. Here we compute `S` from `N` and `I`,
## instead of specifying `S` in the `default` list. The potential
## benefit here is that one could make `I` a parameter to be fitted,
## while ensuring consistent values for `S`.
spec3 = mp_tmb_model_spec(
    before = S ~ N - I
  , during = mp_per_capita_flow("S", "I", "beta * I / N", "infection")
  , default = list(N = 100, I = 1, beta = 0.2)
)
(spec3 
  |> mp_simulator(time_steps = 5L, output = "infection") 
  |> mp_trajectory()
)



}
\concept{create-model-spec}
