% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compartmental.R
\name{CompartmentalSimulator}
\alias{CompartmentalSimulator}
\title{Compartmental Model Simulator (experimental)}
\usage{
CompartmentalSimulator(
  model_directory,
  time_steps,
  .mats_to_save = .mats_to_return,
  .mats_to_return = "state",
  .dimnames = list(),
  .tmb_cpp = "macpan2",
  .initialize_ad_fun = TRUE
)
}
\arguments{
\item{model_directory}{Path to a set of model definition files, defaults
and parameterizations.}

\item{time_steps}{Number of simulation steps.}

\item{.mats_to_save}{Character vector of names of matrices to save. Defaults
to \code{"state"}, which is the state vector. Other useful names include
\code{"total_inflow"} (the incidence associated with each state variable)
and \code{"total_outflow"} (the total leaving each state variable at each
time step). One may also add any variable in \code{model$other_labels()}.
See \code{\link{MatsList}} for details.}

\item{.mats_to_return}{Character vector of names of matrices to return. Defaults
to \code{"state"}, which is the state vector. Other useful names include
\code{"total_inflow"} (the incidence associated with each state variable)
and \code{"total_outflow"} (the total leaving each state variable at each
time step). One may also add any variable in \code{model$other_labels()}.
See \code{\link{MatsList}} for details.}

\item{.dimnames}{Named list of \code{\link{dimnames}} for matrices that change
their dimensions over the simulation steps. These names correspond to the
names of the matrices. The output of the simulations will try their best
to honor these names, but if the shape of the matrix is too inconsistent
with the \code{\link{dimnames}} then numerical indices will be used instead.
For matrices that do not change their dimensions, set \code{\link{dimnames}}
by adding \code{\link{dimnames}} to the matrices passed to \code{...}.}

\item{.tmb_cpp}{Name of a \code{C++} program defining the engine. Typically
you just want to use the default, which is \code{macpan2}, unless you
are extending the
\href{https://canmod.github.io/macpan2/articles/cpp_side.html}{engine}
yourself.}

\item{.initialize_ad_fun}{Should the automatic differentiation function (\code{ad_fun})
be produced with TMB? Choosing \code{FALSE} can be useful if this is
expensive and you want to build up your simulator in steps without having
to recreate the \code{ad_fun} more than necessary.}
}
\description{
Compartmental Model Simulator (experimental)
}
