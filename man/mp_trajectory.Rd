% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmb_model.R
\name{mp_trajectory}
\alias{mp_trajectory}
\alias{mp_trajectory_sd}
\alias{mp_trajectory_ensemble}
\alias{mp_trajectory_sim}
\alias{mp_trajectory_replicate}
\title{Simulate Dynamical Model Trajectories}
\usage{
mp_trajectory(model, include_initial = FALSE)

mp_trajectory_sd(model, conf.int = FALSE, conf.level = 0.95)

mp_trajectory_ensemble(model, n, probs = c(0.025, 0.975))

mp_trajectory_sim(model, n, probs = c(0.025, 0.25, 0.5, 0.75, 0.975))

mp_trajectory_replicate(model, n)
}
\arguments{
\item{model}{A dynamical model simulator produced by
\code{\link{mp_simulator}}.}

\item{include_initial}{Should the initial values of the simulation be
included in the output? If \code{TRUE} this will include outputs for \code{time == 0}
associated with the initial values. See \code{\link{mp_initial}} for another
approach to getting the initial values.}

\item{conf.int}{Should confidence intervals be produced?}

\item{conf.level}{If \code{conf.int} is \code{TRUE}, what confidence level should be
used?  For example, the default of \code{0.95} corresponds to 95\% confidence
intervals.}

\item{n}{Number of random trajectories to simulate.}

\item{probs}{Numeric vector of probabilities corresponding to quantiles for
summarizing the results over the random realizations.}
}
\value{
A data frame with one row for each simulated value and the following
columns.
\describe{
\item{matrix}{
Name of the variable in the model. All variables are matrix-valued
in \code{macpan2} (scalars are technically 1-by-1 matrices), which explains
the name of this field. In hindsight I would have called it \code{variable}.
}
\item{time}{
Time index of the simulated value, with \code{time = 0} indicating initial
values.
}
\item{row}{
The 0-based index of the row of the matrix, or the name of the row
of the matrix if row names (or names for column vectors) are supplied
for the default value of the matrix.
}
\item{col}{
The 0-based index of the column of the matrix, or the name of the column
of the matrix if column names are supplied for the default value of the
matrix. It is also possible that this column is blank if everything
is either a scalar or column vector (a common case).
}
\item{value}{(\code{mp_trajectory} and \code{mp_trajectory_sd}) Simulation values.}
\item{sd}{
(for \code{mp_trajectory_sd} only)
The standard deviations of the simulated values accounting for parameter
estimation uncertainty.
}
\item{conf.low}{
(for \code{mp_trajectory_sd} only)
The lower bounds of the confidence interval for the simulated values.
}
\item{conf.high}{
(for \code{mp_trajectory_sd} only)
The upper bounds of the confidence interval for the simulated values.
}
\item{n\%}{
(for \code{mp_trajectory_[ensemble|sim]})
The n-th quantiles of the simulation values over repeated simulations.
}
}
}
\description{
Return simulations of the trajectory of the output
variables of a dynamical model simulator. To see this functionality
in context, please see \code{vignette("quickstart")}.
}
\section{Functions}{
\itemize{
\item \code{mp_trajectory_sd()}: Simulate a trajectory that includes uncertainty
information provided by the \code{sdreport} function in \code{TMB} with default
settings.

\item \code{mp_trajectory_ensemble()}: Simulate a trajectory that includes uncertainty
information provided by repeatedly sampling from a normal approximation to the
distribution of the fitted parameters, and generating one trajectory for
each of these samples. The quantiles of the empirical distribution of these
trajectories can be used to produce a confidence interval for the
fitted trajectory.

\item \code{mp_trajectory_sim()}: Generate quantiles over \code{n} realizations of
the trajectory. Instead of a \code{value} column in the output data frame, there
is one column for each of the quantiles defined in \code{probs}.

\item \code{mp_trajectory_replicate()}: Generate a list of \code{n} simulation results.

}}
\examples{
spec = mp_tmb_library("starter_models"
  , "si"
  , package = "macpan2"
)
simulator = mp_simulator(spec
  , time_steps = 10L
  , outputs = c("infection", "I")
)
trajectory = mp_trajectory(simulator)
print(trajectory)

}
