% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/product_models.R
\name{ModelVars}
\alias{ModelVars}
\title{Model Variables}
\usage{
ModelVars(...)
}
\arguments{
\item{...}{Vectors giving partitions that describe a set of model
variables. The elements of each vector provides a label for
each variable. r labelled_partitions_validity_message.}
}
\value{
Object of class \code{ModelVars}.
\subsection{Methods}{
\itemize{
\item \verb{$data_frame()}: Return a data frame representation of the model
variable partitions with one row for each variable and one column for
each label.
\item \verb{$filter(...)}: Return a new \code{ModelVars} object containing the
subset of variables expressed by the filter in \code{...} (note: the
format of the filtering arguments are not finalized)
\item \verb{$factor_to_product_map(factor_label, filter_partitions, vertex)}:
Return a named list of strings with names giving the partitions
for variables associated with the factor_label ...
}
}

\subsection{Method Arguments}{

TODO maybe
}
}
\description{
Construct an object for containing and operating on lists
of model variables. These lists are represented by a set
of \code{n} character vectors that are all the same length. The \code{i}th
element of the \code{j}th character vector provides one of \code{n} partitions
for identifying the \code{i}th variable.
}
\details{
Often the character vectors relate to a specific sub-model (or
factor model in the terminology of product models). For example,
the following set of model variables is a product of two factor
models, \code{si} and \code{vax}:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{ModelVars(
  si = c("S", "I", "S", "I"),
  vax = c("n", "n", "y", "y")
)$data_frame()
#>   si vax
#> 1  S   n
#> 2  I   n
#> 3  S   y
#> 4  I   y
}\if{html}{\out{</div>}}

The first two states are the \code{S} and \code{I} compartments for
unvaccinated individuals and the last two are for those who
are vaccinated. Constructing variable lists for product models
like this is easier with the \code{VarsProduct} function.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{VarsProduct(
  ModelVars(si = c("S", "I")),
  ModelVars(vax = c("n", "y"))
)$data_frame
#> function() as.data.frame(self$partitions)
#> <bytecode: 0x7fb990eeaff8>
#> <environment: 0x7fb946713f78>
}\if{html}{\out{</div>}}
}
